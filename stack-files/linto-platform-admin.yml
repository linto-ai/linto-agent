version: "3.7"

x-labels: &labels
   traefik.enable: "true"
   traefik.http.services.linto-platform-admin.loadbalancer.server.port: 80
   traefik.http.routers.linto-platform-admin.entrypoints: "http"
   traefik.http.routers.linto-platform-admin.rule: "Host(`${LINTO_STACK_DOMAIN}`)"

x-ssl: &ssl
  traefik.http.routers.linto-platform-admin-secure.entrypoints: "https"
  traefik.http.routers.linto-platform-admin-secure.tls: "true" 
  traefik.http.routers.linto-platform-admin-secure.rule: "Host(`${LINTO_STACK_DOMAIN}`)"
  traefik.http.routers.linto-platform-admin.middlewares: "ssl-redirect@file"

x-acme: &acme
  traefik.http.routers.linto-platform-admin-secure.tls.certresolver: "mytlschallenge"

services:
  linto-platform-admin:
    image: lintoai/linto-platform-admin:$LINTO_STACK_IMAGE_TAG
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${LINTO_SHARED_MOUNT}/mongodb-schemas/version:/usr/src/app/linto-admin/webserver/model/mongodb/schemas
    env_file: .dockerenv
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.ip == ingress # <== Must get deployed on a manager node with ip label set to "ingress"
      labels:
        <<: [ *labels ]
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 7
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 4
      start_period: 150s
      # You might bind mount here webserver and vue_app directories for development ;)
    command: # Overrides CMD specified in dockerfile (none here, handled by entrypoint)
      - --rebuild-vue-app
    # - --rebuild-vue-app-dev
    # - --reinstall-vue-app
    # - --reinstall-webserver
      - --run-cmd=npm run start
    networks:
      - linto-net

networks:
  linto-net:
    external: true
