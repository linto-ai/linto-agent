version: '3.7'

x-labels: &labels
  traefik.enable: "true"
  traefik.http.services.linto-platform-stt-service-manager-nginx.loadbalancer.server.port: 80
  traefik.http.routers.linto-platform-stt-service-manager-nginx.entrypoints: "http"
  traefik.http.routers.linto-platform-stt-service-manager-nginx.rule: "Host(`${LINTO_STACK_DOMAIN}`) && PathPrefix(`/nginx`)"
  traefik.http.middlewares.linto-platform-stt-service-manager-nginx-prefix.stripprefix.prefixes: "/nginx"
  traefik.http.routers.linto-platform-stt-service-manager-nginx.middlewares: "linto-platform-stt-service-manager-nginx-prefix@docker"

x-ssl: &ssl
  traefik.http.routers.linto-platform-stt-service-manager-nginx-secure.entrypoints: "https"
  traefik.http.routers.linto-platform-stt-service-manager-nginx-secure.tls: "true"
  traefik.http.routers.linto-platform-stt-service-manager-nginx-secure.rule: "Host(`${LINTO_STACK_DOMAIN}`) && PathPrefix(`/nginx`)"
  traefik.http.routers.linto-platform-stt-service-manager-nginx-secure.middlewares: "linto-platform-stt-service-manager-nginx-prefix@docker"

x-acme: &acme
  traefik.http.routers.linto-platform-stt-service-manager.tls.certresolver: "mytlschallenge"

services:

  linto-platform-stt-service-manager-nginx:
    image: nginx:latest
    env_file: .dockerenv
    volumes:
      - ${LINTO_SHARED_MOUNT}/stt-service-manager/nginx.conf:/etc/nginx/conf.d/default.conf
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        <<: [ *labels ]
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 4
      start_period: 50s
    networks:
      - linto-net

networks:
    internal:
    linto-net:
       external: true
